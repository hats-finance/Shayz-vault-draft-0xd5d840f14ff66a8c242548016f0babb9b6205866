import React, { useContext } from "react";
import ArrowIcon from "assets/icons/arrow.icon";
import CheckmarkIcon from "assets/icons/checkmark.icon";
import { Colors } from "constants/constants";
// Components
import { VulnerabilityStep } from "pages/VulnerabilityFormPage/types";
import { VulnerabilityFormContext } from "pages/VulnerabilityFormPage/store";
import { StyledVulnerabilityFormCard } from "./styles";

interface IProps {
  id: number
  card: VulnerabilityStep
  title: string
  verified: boolean
  children: React.ReactNode
  disabled: boolean
  extraInfoTitle?: string
  collapsed: boolean
}

export default function VulnerabilityFormCard({ id, card, title, verified, children, disabled, extraInfoTitle, collapsed }: IProps) {
  const { setCurrentStep } = useContext(VulnerabilityFormContext);

  return (
    <StyledVulnerabilityFormCard isVerified={verified} isDisabled={disabled} isCollapsed={collapsed}>
      <div className="card-header" onClick={() => setCurrentStep(id)}>
        <span className="card-number">{verified ? <CheckmarkIcon /> : id + 1}</span>
        <span className="card-title">{title}</span>
        {extraInfoTitle && <span>{`(${extraInfoTitle})`}</span>}
        <div className="card-arrow">
          <ArrowIcon fill={verified ? Colors.darkBlue : Colors.turquoise} />
        </div>
      </div>

      <div className="card-body">
        {children}
      </div>
    </StyledVulnerabilityFormCard>
  )
}
